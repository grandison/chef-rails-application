rails_root = ENV['RAILS_ROOT'] || File.dirname(__FILE__) + '/..'
rails_env  = ENV['RAILS_ENV'] || '<%= node[:application][:environment] %>'

worker_processes <%= node[:application][:workers] %>

preload_app true
GC.respond_to?(:copy_on_write_friendly=) and
  GC.copy_on_write_friendly = true

timeout 30
listen '<%= node[:application][:socket] %>'

pid               '<%= node[:application][:current_path] %>/tmp/pids/unicorn.pid'
stderr_path       '<%= node[:application][:shared_path] %>/log/unicorn.stderr.log'
stdout_path       '<%= node[:application][:shared_path] %>/log/unicorn.stdout.log'
working_directory '<%= node[:application][:current_path] %>'

before_fork do |server, worker|
  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.connection.disconnect!

    old_pid = rails_root + '/tmp/pids/unicorn.pid.oldbin'

    if File.exists?(old_pid) && server.pid != old_pid
      begin
        Process.kill("QUIT", File.read(old_pid).to_i)
      rescue Errno::ENOENT, Errno::ESRCH
        # someone else did our job for us
      end
    end
end

after_fork do |server, worker|
  defined?(ActiveRecord::Base) and
    ActiveRecord::Base.establish_connection

  port = 1 + worker.nr
  child_pid = server.config[:pid].sub('.pid', ".#{port}.pid")
  system("echo #{Process.pid} > #{child_pid}")
end

before_exec do |server|
  ENV["BUNDLE_GEMFILE"] = "#{rails_root}/Gemfile"
end
